#include <iostream>
using namespace std;

class Subject{
public:
    char *secondName = new char[128]; // фамилия
    char sex; // пол (принимает один символ (предполагается английская "M" или "F"))
    int birthYear; // год рождения
    char *homeAddress = new char[128]; // домашний адрес
    void printSub(); // объявляем функцию вывода на экран данных по субъекту
    void enter();
};

void Subject::enter()
{
    cout << ("\n Фамилия\t");
    cin >> secondName;
    cout << (" Пол\t");
    cin >> sex;
    cout << (" Год рождения\t");
    cin >> birthYear;
    cout << (" Домашний адрес\t");
    cin >> homeAddress;
}

void changeAddress(Subject subs[], int n) // инициализируем функцию смены адреса
{
    char *newAddress = new char[128]; // переменная для нового адреса
    cout << "Фамилия человека, которому меняем адрес: ";
    cin >> newAddress;
    for (int i = 0; i < n; i++) // проверяем все субъекты на совпадение фамилий
    {
        if (*subs[i].secondName == *newAddress)
        {
            cout << "Новый адрес для " << subs[i].secondName << endl;
            cin >> newAddress;
            subs[i].homeAddress = newAddress; // присваеваем субъекту новый адрес
            break; // завершаем цикл
        }
        else
            cout << "Такой человек не найден" << endl;
    }
}

void Subject::printSub() // инициализируем функцию вывода на экран данных по субъекту
{
    cout << "Фамилия: " << secondName << endl;
    cout << "Пол: " << sex << endl;
    cout << "Год рождения: " << birthYear << endl;
    cout << "Домашний адрес: " << homeAddress << endl;
    cout << "____________________________" << endl; // просто разграничиваем вывод информации
}

void findByName(Subject subs[], int n) // функция для поиска человека по фамилии (в параметры передаем массив субъектов и их кол-во)
{
    char *_secondName = new char[128]; // переменная для фамилии
    cout << "Введите фамилию: ";
    cin >> _secondName;
    bool isFound = false; // найден/не найден
   for (int i = 0; i < n; i++) // проверяем все субъекты на совпадение фамилий
   {
       if (*subs[i].secondName == *_secondName)  // если совпала, то выводим на экран информацию о субъекте и завершаем цикл
       {
           subs[i].printSub();
           isFound = true; // меняем значение переменной на "Найден"
           break; // завершаем цикл
       }
   }
   if (!isFound) // если не найден
       cout << "Такой человек не найден" << endl; // то печатаем сообщение
}

void findByYear(Subject subs[], int n) // функция для поиска человека по году рождения (в параметры передаем массив субъектов и их кол-во)
{
    int year = 0;
    cout << "Введите год: ";
    cin >> year;
    bool isFound = false; // найден/не найден
    for (int i = 0; i < n; i++) // цикл работает по аналогии с поиском по фамилии (смотри выше)
    {
        if (subs[i].birthYear == year)
        {
            subs[i].printSub();
            isFound = true;
        }
    }
    if (!isFound)
        cout << "Такой человек не найден" << endl;
}

void findRetirees(Subject subs[], int n)
{
    bool isFound = false;
    cout << "Поиск пенсионеров... " << endl;
    for (int i = 0; i < n; i++) // цикл работает по аналогии с циклами выше (смотри выше)
    {
        if (subs[i].sex == 'M' && 2019 - subs[i].birthYear >= 65) // если человек мужского пола в возрасте от 65 лет (на 2019 год), то выводим его данные
        {
            subs[i].printSub();
            isFound = true;
        }
        else if (subs[i].sex == 'F' && 2019 - subs[i].birthYear >= 60) // если человек женского пола в возрасте от 60 лет (на 2019 год), то выводим его данные
        {
            subs[i].printSub();
            isFound = true;
        }
    }
    if (!isFound)
        cout << "Пенсионеров нет" << endl;
}

int main() {
    bool exit = false;
    int n = 0;
    Subject subjects[100]; // создаем массив объектов нашего класса (субъектов)
    do
    {
        int m = 0;
        cout << "1 - ввод данных" << endl;
        cout << "2 - вывод данных" << endl;
        cout << "3 - поиск по фамилии" << endl;
        cout << "4 - поиск по году рождения" << endl;
        cout << "5 - изменение адреса" << endl;
        cout << "6 - поиск пенсионеров" << endl;
        cout << "7 - выход из программы" << endl;
        cout << "Ваш выбор: ";
        cin >> m;

        switch (m)
        {
            case 1:
                cout << ("Kоличество субъектов:  \t");
                cin >> n;
                for (int i = 0; i < n; i++)
                {
                    subjects[i].enter();
                }
                break;
            case 2: if (n > 0)
                    {
                        for (int i = 0; i < n; i++)
                        {
                            subjects[i].printSub();
                        }
                    }
                    else
                        cout << "Нет данных" << endl;
                break;
            case 3: findByName(subjects, m); // ищем человека по фамилии
                break;
            case 4: findByYear(subjects, m); // ищем человека по году рождения
                break;
            case 5: changeAddress(subjects, m); // меняем адрес человека
                break;
            case 6: findRetirees(subjects, m); // ищем пенсионеров
                break;
            case 7: exit = true;
                break;
            default: cout << "Неккоректный ввод" << endl;
                break;
        }
    }
    while (!exit);
    return 0;
}
